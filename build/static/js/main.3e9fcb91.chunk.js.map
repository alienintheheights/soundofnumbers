{"version":3,"sources":["Tones/Play.js","constants.js","Tones/generator.js","Tones/PlayForm.js","App.js","reportWebVitals.js","index.js"],"names":["Play","props","noteVals","tempo","loop","play","synth","showNote","Tone","oscillator","volume","type","partials","toDestination","useEffect","restartSequence","stopSequence","stop","cancel","console","log","bpm","value","time","note","triggerAttackRelease","schedule","currentNote","substring","length","replace","noteElement","document","querySelector","classList","add","setTimeout","remove","start","id","className","CHROMATIC_SCALE","NOTE_SCALE","SCALE_MAP","E","PI_NAME","PI12_NAME","E_NAME","GAMMA_NAME","ROOT2_NAME","ROOT5_NAME","MATH_MAP","ZERO_TO_ELEVEN","Array","keys","getOctaveOffset","rootOctave","revisedOctave","rawNote","arrayIndex","marks","c","map","index","label","base12pattern","PlayForm","useState","setPlay","notes","setNotes","setNoteVals","constantName","setConstantName","scale","setScale","setTempo","setLoop","key","setKey","octave","setOctave","base","setBase","prepareNotes","splitNotes","relativeNotes","keyIndex","row","generateNotes","noteArray","filter","num","isValidNumber","findNote","isNaN","match","parseInt","selectScale","event","target","selectNumConstant","Grid","container","justifyContent","alignItems","rowSpacing","columnSpacing","xs","sm","md","item","ButtonGroup","variant","aria-label","Button","onClick","FormLabel","component","Slider","defaultValue","valueLabelDisplay","onChange","step","min","max","FormControlLabel","control","Radio","checked","name","TextField","size","val","FormControl","RadioGroup","href","link","description","Box","sx","m","width","noValidate","autoComplete","multiline","maxRows","disabled","App","theme","createTheme","palette","mode","ThemeProvider","flexGrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e9fcb91.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport * as Tone from 'tone'\n\nfunction Play(props) {\n\n    const { noteVals, tempo, loop, play, showNote } = props\n\n    const decay = 0.1\n    const volume = 1\n    const waveform =  'fatsine' \n  \n    const synth = new Tone.PolySynth(Tone.Synth, {\n        oscillator : {\n            volume   : volume,\n            type     : waveform,\n            //spread   : 20,\n            partials : [0, 2, 3, 4]\n        }\n    }).toDestination()\n\n    useEffect(() => {\n        if (play) {\n            restartSequence()\n        } else {\n            stopSequence()\n        }\n    }, [play, noteVals, tempo, loop])\n   \n    const stopSequence = () => {\n        Tone.Transport.stop()\n        Tone.Transport.cancel()\n    }\n\n    const restartSequence = () => {\n        stopSequence()\n        console.log(noteVals)\n        Tone.Transport.bpm.value = tempo\n        const seq = new Tone.Sequence((time, note) => {\n            synth.triggerAttackRelease(note, decay, time)\n            Tone.Draw.schedule(() => {\n                const currentNote = note.substring(0, note.length - 1).replace('#', 'S')\n\n                //setDisplayName(note.substring(0, note.length - 1))\n                const noteElement = document.querySelector('#'+currentNote)\n                noteElement.classList.add('active')\n                setTimeout(() => {\n                    noteElement.classList.remove('active')\n                }, 50)\n            })\n        }, noteVals).start(0)\n        seq.loop = loop\n        Tone.Transport.start()\n    }\n\n    console.log('play render')\n    return (\n        <div>\n            <div id=\"note-wrapper\">\n                <div id=\"C\" className=\"current-note\">C</div>\n                <div id=\"CS\" className=\"current-note\">C#</div>\n                <div id=\"D\" className=\"current-note\">D</div>\n                <div id=\"DS\" className=\"current-note\">D#</div>\n                <div id=\"E\" className=\"current-note\">E</div>\n                <div id=\"F\" className=\"current-note\">F</div>\n                <div id=\"FS\" className=\"current-note\">F#</div>\n                <div id=\"G\" className=\"current-note\">G</div>\n                <div id=\"GS\" className=\"current-note\">G#</div>\n                <div id=\"A\" className=\"current-note\">A</div>\n                <div id=\"AS\" className=\"current-note\">A#</div>\n                <div id=\"B\" className=\"current-note\">B</div>\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default Play\n","\nexport const TWELVE_NOTE_IONIAN_SCALE = [0, 2, 4, 5, 7, 9, 11, 12, 14, 16, 17, 19]\nexport const TWELVE_NOTE_DORIAN_SCALE = [0, 2, 3, 5, 7, 9, 10, 12, 14, 15, 17, 18]\nexport const TWELVE_NOTE_PHYRGIAN_SCALE = [0, 1, 3, 5, 7, 8, 10, 12, 13, 15, 17, 19]\nexport const TWELVE_NOTE_LYDIAN_SCALE = [0, 2, 4, 6, 7, 9, 11, 12, 14, 16, 18, 19]\nexport const TWELVE_NOTE_MIXOLYDIAN_SCALE = [0, 2, 4, 5, 7, 9, 10, 12, 14, 16, 17, 19]\nexport const TWELVE_NOTE_AEOLIAN_SCALE = [0, 2, 3, 5, 7, 8, 10, 12, 14, 15, 17, 19]\nexport const TWELVE_NOTE_LOCRIAN_SCALE = [0, 1, 3, 5, 6, 8, 10, 12, 13, 15, 17, 19]\nexport const TWELVE_NOTE_HARMONIC_MINOR_SCALE = [0, 2, 3, 5, 7, 8, 11, 12, 14, 15, 17, 19]\nexport const TWELVE_NOTE_HUNGARIAN_MINOR_SCALE = [0, 2, 3, 6, 7, 8, 11, 12, 14, 15, 18, 19]\nexport const TWELVE_NOTE_PHYRGIAN_DOMINANT_SCALE = [0, 1, 4, 5, 7, 8, 10, 12, 13, 16, 17, 19]\n\nexport const CHROMATIC_SCALE = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\nexport const NOTE_SCALE = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\n\nexport const SCALE_MAP = {\n    'ionian'           : TWELVE_NOTE_IONIAN_SCALE,\n    'dorian'           : TWELVE_NOTE_DORIAN_SCALE,\n    'phrygian'         : TWELVE_NOTE_PHYRGIAN_SCALE,\n    'lydian'           : TWELVE_NOTE_LYDIAN_SCALE,\n    'mixolydian'       : TWELVE_NOTE_MIXOLYDIAN_SCALE,\n    'aeolian'          : TWELVE_NOTE_AEOLIAN_SCALE,\n    'locrian'          : TWELVE_NOTE_LOCRIAN_SCALE,\n    'harmonic'         : TWELVE_NOTE_HARMONIC_MINOR_SCALE,\n    'hungarian'        : TWELVE_NOTE_HUNGARIAN_MINOR_SCALE,\n    'phrygiandominant' : TWELVE_NOTE_PHYRGIAN_DOMINANT_SCALE,\n    'chromatic'        : CHROMATIC_SCALE\n}\n\nexport const PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748'\nexport const PI12 = '3.184809493B918664573A6211BB151551A05729290A7809A492742140A60A55256A0661A03753A3AA54805646880181A36830'\nexport const E = '2.71828182845904523536028747135266249775724709369995957496967627724076630353547594571382178525166427427466391932003059921817413596629043572900334295260595630738132328627943490763233829880753195251019011573834187930702154089149934884167509244761460668082264800168477411853742345442437107539077744992069551702761838606261331384583000752044933826560297606737113'\nexport const PHI = '1.61803398874989484820458683436563811772030917980576286213544862270526046281890244970720720418939113748475408807538689175212663386222353693179318006076672635443338908659593958290563832266131992829026788067520876689250171169620703222104321626954862629631361443814975870122034080588795445474924618569536486444924104432077134494704956584678850987433944221254487706647809158846074998871240076521'\nexport const ROOT2 = '1.414213562373095048801688724209698078569671875376948073176679737990732478462107038850387534327641572735013846230912297024924836055850737212644121497099935831413222665927505592755799950501152782060571470109559971605970274534596862014728517418640889198609552329230484308714321450839762603627995251407989687253396546331808829640620615258352395054745750287759961729835575220337531857011354374'\nexport const ROOT5 = '2.23606797749978969640917366873127623544061835961152572427089724541052092563780489941441440837878227496950817615077378350425326772444707386358636012153345270886677817319187916581127664532263985658053576135041753378500342339241406444208643'\nexport const GAMMA = '0.5772156649015328606065120900824024310421593359399235988057672348848677267776646709369470632917467495'\n\nexport const PI_NAME = 'pi'\nexport const PI12_NAME = 'pi12'\nexport const E_NAME = 'e'\nexport const PHI_NAME = 'phi'\nexport const GAMMA_NAME = 'gamma'\nexport const ROOT2_NAME = 'root2'\nexport const ROOT5_NAME = 'root5'\n\nexport const MATH_MAP = {\n    [PI_NAME] : {\n        'label'       : '\\u03C0',\n        'description' : 'Pi, the ratio of a circle\\'s circumference to its diameter',\n        'link'        : 'https://en.wikipedia.org/wiki/Pi'\n    },\n    [PI12_NAME] : {\n        'label'       : '\\u03C012',\n        'description' : 'Pi in base 12',\n        'link'        : 'https://robertlovespi.net/2014/06/09/the-beginning-of-the-number-pi-in-binary-through-hexadecimal-etc/'\n    },\n    [E_NAME] : {\n        'label'       : 'e',\n        'description' : 'Euler\\'s Number',\n        'link'        : 'https://en.wikipedia.org/wiki/E_(mathematical_constant)'\n    },\n    [PHI_NAME] : {\n        'label'       : '\\u03C8',\n        'description' : 'The Golden Ratio',\n        'link'        : 'https://en.wikipedia.org/wiki/Golden_ratio'\n    },\n    [GAMMA_NAME] : {\n        'label'       : '\\u03B3',\n        'description' : 'The Euler-Mascheroni constant',\n        'link'        : 'http://numbers.computation.free.fr/Constants/Gamma/gamma.pdf'\n    },\n    [ROOT2_NAME] : {\n        'label'       : '\\u221A2',\n        'description' : 'The Square Root of Two',\n        'link'        : 'https://en.wikipedia.org/wiki/Square_root_of_2'\n    },\n    [ROOT5_NAME] : {\n        'label'       : '\\u221A5',\n        'description' : 'The Square Root of Five',\n        'link'        : 'https://en.wikipedia.org/wiki/Square_root_of_5'\n    }\n}\n","import { NOTE_SCALE, CHROMATIC_SCALE } from '../constants'\n\nconst ZERO_TO_ELEVEN = [...Array(12).keys()]\n  \nexport const generateNotes = (keyIndex=0, scale=CHROMATIC_SCALE, octave=4) => {\n    const rootOctave = octave\n    let revisedOctave = octave\n    return ZERO_TO_ELEVEN.map((row, index) => {\n        const arrayIndex = keyIndex + scale[index%12]\n        const rawNote = NOTE_SCALE[arrayIndex%12]\n        revisedOctave = getOctaveOffset(rootOctave, revisedOctave, rawNote, arrayIndex)\n        const finalNote = rawNote + revisedOctave\n        return finalNote\n    })\n}\n\n/**\n * octave, scale, index(0...n)\n * \n * B4 C5 .. B5 C6\n * \n * @param {*} rawNote\n * @param {*} index \n * @returns \n */\nconst getOctaveOffset = (rootOctave, revisedOctave, rawNote, arrayIndex) => {\n    if (arrayIndex > 0 && rawNote === NOTE_SCALE[0]) {\n        return revisedOctave + 1\n    } else if (arrayIndex > 11 && rootOctave === revisedOctave) {\n        return revisedOctave + 1\n    }\n    return revisedOctave\n}","import React, { useState, useEffect } from 'react'\n\n\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport Radio from '@mui/material/Radio'\nimport RadioGroup from '@mui/material/RadioGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormLabel from '@mui/material/FormLabel'\nimport TextField from '@mui/material/TextField'\nimport Slider from '@mui/material/Slider'\n\nimport Play from './Play'\nimport { generateNotes } from './generator'\nimport * as c from '../constants'\nimport {experimentalStyled} from '@mui/material'\n\n// octave marks\nconst marks = c.NOTE_SCALE.map((note, index) => {\n    return {\n        value : index,\n        label : note\n    }\n})\n\nconst base12pattern = /[^0-9AB]/g\n\nfunction PlayForm() {\n\n    const [play, setPlay] = useState(false)\n    const [notes, setNotes] = useState('1234567890')\n    const [noteVals, setNoteVals] = useState([])\n    const [constantName, setConstantName] = useState('')\n    const [scale, setScale] = useState('ionian')\n    const [tempo, setTempo] = useState(120)\n    const [loop, setLoop] = useState(false)\n    const [key, setKey] = useState(0)\n    const [octave, setOctave] = useState(4)\n    const [base, setBase] = useState(12)\n\n    useEffect(() => {\n        prepareNotes()\n    }, [scale, constantName, key, octave, notes])\n\n    const selectNoteValues = (event) => {\n        if (event && event.target && isValidNumber(event.target.value)) {\n            setNotes(event.target.value)\n            setConstantName('custom')\n        }\n    }\n\n    const prepareNotes = () => {\n        const splitNotes = [...notes]//.map(note => (note !== '0') ? parseInt(note, base) - 1 : 9)\n        const relativeNotes = generateNotes(key, c.SCALE_MAP[scale], octave)\n        const noteArray = splitNotes.filter(num => isValidNumber(num)).map(num => findNote(num, relativeNotes))\n        setNoteVals(noteArray)\n    }\n\n    const isValidNumber = (num) => {\n        if (base === 10) \n            return !isNaN(num)\n\n        if (typeof (num) === 'string' && num.match(base12pattern)) {\n            return false\n        }\n        return !isNaN(parseInt(num, base))\n    }\n\n    const findNote = (num, relativeNotes) => {\n        let index // could do this with the ASCII values instead\n        if (num === '0') {\n            index = 9\n        } else if (num === 'A') {\n            index = 10\n        } else if (num === 'B') {\n            index = 11\n        } else {\n            index = num - 1\n        }\n        return relativeNotes[index]\n    }\n\n    const selectLoop = () => {\n        setLoop(!loop)\n    }\n\n    const selectTempo = (event) => {\n        setTempo(event.target.value)\n    }\n\n    const selectScale = (event) => {\n        setScale(event.target.value)\n    }\n\n    const selectKey = (event) => {\n        setKey(event.target.value)\n    }\n\n    const selectBase = () => {\n        if (base === 10) {\n            setBase(12)\n        } else if (base === 12) {\n            setBase(10)\n        }\n    }\n\n    const selectOctave = (event) => {\n        const val = event.target.value * 1\n        if (isNaN(val) || val < 0) {\n            return\n        }\n        setOctave(val)\n    }\n\n    const selectNumConstant = (event) => {\n        setConstantName(event.target.value)\n        if (event.target.value === c.PI_NAME) {\n            setBase(10)\n            setNotes(c.PI)\n        } else if (event.target.value === c.PI12_NAME) {\n            setBase(12)\n            setNotes(c.PI12)\n        } else if (event.target.value === c.E_NAME) {\n            setBase(10)\n            setNotes(c.E)\n        } else if (event.target.value === c.ROOT2_NAME) {\n            setBase(10)\n            setNotes(c.ROOT2)\n            setNotes(c.E)\n        } else if (event.target.value === c.ROOT5_NAME) {\n            setBase(10)\n            setNotes(c.ROOT5)\n        } else if (event.target.value === c.GAMMA_NAME) {\n            setBase(10)\n            setNotes(c.GAMMA)\n        } else {\n            setBase(10)\n            setNotes(c.PHI)\n        }\n    }\n\n    return (\n        <div className='tone-form'>\n            <Grid \n                container \n                justifyContent=\"center\"\n                alignItems=\"center\"\n                rowSpacing={2} \n                columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                <Grid item xs={12}>\n                    <Play play={play} noteVals={noteVals} tempo={tempo} loop={loop} showNote={false}/>\n                </Grid>\n                <Grid item xs={12}>\n                    <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n                        <Button \n                            id=\"play-button\" \n                            onClick={() => setPlay(true)}\n                            label='Play It'>Play</Button>\n                        <Button \n                            id=\"stop-button\" \n                            onClick={() => setPlay(false)}\n                            label='Stop It'>Stop</Button>\n                    </ButtonGroup>\n                </Grid>\n                <Grid item xs={10}>\n                    <FormLabel component=\"legend\">Tempo</FormLabel>\n                    <Slider\n                        aria-label=\"Tempo\"\n                        defaultValue={120}\n                        valueLabelDisplay=\"auto\"\n                        onChange={selectTempo}\n                        step={5}\n                        marks\n                        min={40}\n                        max={180}\n                    />\n                    <Button id=\"tempo-button\" >{tempo}</Button>\n                </Grid>\n                <Grid item xs={2}>\n                    <FormControlLabel control={ <Radio  />} value=\"loop\" onClick={selectLoop} checked={loop} name=\"loop\" label='Loop' />\n                </Grid>\n                <Grid item xs={10}>\n                    <FormLabel component=\"legend\">Root Note</FormLabel>\n                    <Slider\n                        aria-label=\"Key\"\n                        defaultValue={0}\n                        valueLabelDisplay=\"auto\"\n                        onChange={selectKey}\n                        step={1}\n                        marks={marks}\n                        min={0}\n                        max={11}\n                    />\n                </Grid>\n                <Grid item xs={2}  id='octave-wrapper'>\n                    <FormLabel component=\"legend\">Octave</FormLabel>\n                    <TextField\n                        id='octave-field'\n                        size='small'\n                        type='number' \n                        onChange={selectOctave}\n                        value={octave}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Mode</FormLabel>\n                        <RadioGroup row aria-label=\"scale\" name=\"row-radio-buttons-group\">\n                            <FormControlLabel control={ <Radio  />} value=\"ionian\" onClick={selectScale} checked={scale==='ionian'} name=\"scale\" label='Ionian' />\n                            <FormControlLabel control={ <Radio  />} value=\"dorian\" onClick={selectScale} checked={scale==='dorian'} name=\"scale\" label='Dorian' />\n                            <FormControlLabel control={ <Radio  />} value=\"phrygian\" onClick={selectScale} checked={scale==='phrygian'} name=\"scale\" label='Phrygian' />\n                            <FormControlLabel control={ <Radio  />} value=\"lydian\" onClick={selectScale} checked={scale==='lydian'} name=\"scale\" label='Lydian' />\n                            <FormControlLabel control={ <Radio  />} value=\"mixolydian\" onClick={selectScale} checked={scale==='mixolydian'} name=\"scale\" label='Mixolydian' />\n                            <FormControlLabel control={ <Radio  />} value=\"aeolian\" onClick={selectScale} checked={scale==='aeolian'} name=\"scale\" label='Aeolian' />\n                            <FormControlLabel control={ <Radio  />} value=\"locrian\" onClick={selectScale} checked={scale==='locrian'} name=\"scale\" label='Locrian' />\n                            <FormControlLabel control={ <Radio  />} value=\"harmonic\" onClick={selectScale} checked={scale==='harmonic'} name=\"scale\" label='Harmonic Minor' />\n                            <FormControlLabel control={ <Radio  />} value=\"hungarian\" onClick={selectScale} checked={scale==='hungarian'} name=\"scale\" label='Hungarian Minor' />\n                            <FormControlLabel control={ <Radio  />} value=\"phrygiandominant\" onClick={selectScale} checked={scale==='phrygiandominant'} name=\"scale\" label='Phrygian Dominant' />\n                            <FormControlLabel control={ <Radio  />} value=\"chromatic\" onClick={selectScale} checked={scale==='chromatic'} name=\"scale\" label='Chromatic' />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Mathematical Constants</FormLabel>\n                        <RadioGroup row aria-label=\"numConstant\" name=\"row-radio-buttons-group\">\n                            <FormControlLabel control={ <Radio  />} value=\"pi\" onClick={selectNumConstant} checked={constantName===c.PI_NAME} name=\"numConstant\" label={c.MATH_MAP[c.PI_NAME].label} />\n                            <FormControlLabel control={ <Radio  />} value=\"pi12\" onClick={selectNumConstant} checked={constantName===c.PI12_NAME} name=\"numConstant\" label={c.MATH_MAP[c.PI12_NAME].label} />\n                            <FormControlLabel control={ <Radio  />} value=\"e\" onClick={selectNumConstant}  checked={constantName===c.E_NAME} name=\"numConstant\" label={c.MATH_MAP[c.E_NAME].label} />\n                            <FormControlLabel control={ <Radio  />} value=\"gamma\" onClick={selectNumConstant} checked={constantName===c.GAMMA_NAME} name=\"numConstant\" label={c.MATH_MAP[c.GAMMA_NAME].label} />\n                            <FormControlLabel control={ <Radio  />} value=\"phi\" onClick={selectNumConstant} checked={constantName==='phi'} name=\"numConstant\" label={c.MATH_MAP['phi'].label} />\n                            <FormControlLabel control={ <Radio  />} value=\"root2\" onClick={selectNumConstant} checked={constantName===c.ROOT2_NAME} name=\"numConstant\" label={c.MATH_MAP[c.ROOT2_NAME].label} />\n                            <FormControlLabel control={ <Radio  />} value=\"root5\" onClick={selectNumConstant} checked={constantName===c.ROOT5_NAME} name=\"numConstant\" label={c.MATH_MAP[c.ROOT5_NAME].label} />\n                        </RadioGroup>\n                        <div className='about-constant'>\n                            {constantName && c.MATH_MAP[constantName] && (<a href={c.MATH_MAP[constantName].link}>{c.MATH_MAP[constantName].description}</a>)}\n                        </div>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root' : { m: 1, width: '40ch' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        <TextField\n                            multiline \n                            maxRows={10}\n                            onChange={selectNoteValues}\n                            value={notes}\n                            label={'Or enter a custom note sequence'} //optional\n                        />\n                    </Box>\n                    <div>\n                        <FormControlLabel control={ <Radio />} onClick={() => { \n                            setNotes('')\n                            setBase(10)\n                        }} checked={base===10} name=\"base\" label='Base 10' />\n                        <FormControlLabel control={ <Radio />} onClick={() => { \n                            setNotes('')\n                            setBase(12)\n                        }} checked={base===12} name=\"base\" label='Base 12' />\n                    </div> \n                   \n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root' : { m: 1, width: '40ch' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        <TextField\n                            multiline \n                            maxRows={10}\n                            disabled={true}\n                            value={noteVals}\n                            label={'translated to notes per the selected root and mode'}\n                        />\n                    </Box>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default PlayForm\n","\n\nimport Container from '@mui/material/Container'\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport './App.css'\nimport PlayForm from './Tones/PlayForm'\n\nfunction App() {\n    const theme = createTheme({ palette: { mode: 'light' } })\n    \n    return (\n        <div className='App'>\n            <ThemeProvider theme={theme}>\n                <h2>The Sound of Numbers</h2>\n                <Box sx={{ flexGrow: 1 }}>\n                    <PlayForm/>\n                </Box>\n            </ThemeProvider>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}